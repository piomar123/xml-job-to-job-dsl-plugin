syntax.job = %s('%s') {%n%s}%n%n
syntax.method = def %s(%s) {%nreturn {%n%s}%n}%n%n
syntax.method_param = %s, 
syntax.method_call = <t>%s(%s)%n
syntax.method_call_subsequent = << %s(%s)
syntax.method_call_closure = <t>%s(%s) {%n%s<t>}%n
syntax.tab = \t
syntax.object_with_name = <t>%s {%n%s<t>}%n
syntax.object = {%n%s<t>}
syntax.object_def = def %s = {%n%s}%n
syntax.property = <t>%s %s
syntax.string_variable = def String %s = '''%s'''%n
syntax.int_variable = def int %s = '%s'
syntax.check_env_variable = if (binding.variables.%s) {%n%s = binding.variables.%s%n}%n%n
syntax.array = [%s]
syntax.method_call_non_supported = <t>'%s'('%s')%n
syntax.view = listView('%s') {%n\tjobs {%n%s\t}%n\tcolumns {%n%s\t}%n}
syntax.view.job = \t\tname('%s')%n
syntax.view.column = \t\t%s()%n